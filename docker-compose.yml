version: '3.8'

services:
  # PostgreSQL Service
  postgres:
    image: postgres:latest
    container_name: tradingbot_postgres
    environment:
      POSTGRES_USER: tradingAdmin
      POSTGRES_PASSWORD: tradingPass
      POSTGRES_DB: tradingdb
    ports:
      - "5432:5432"
    networks:
      - trading_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  # Fluentd Service
  fluentd:
    image: fluent/fluentd:v1.14-1
    container_name: fluentd
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - trading_network
    volumes:
      - ./fluentd:/fluentd/etc
      - ./logs:/logs
    environment:
      - FLUENT_ELASTICSEARCH_HOST=elasticsearch
      - FLUENT_ELASTICSEARCH_PORT=9200
    command: ["fluentd", "-c", "/fluentd/etc/fluent.conf"]

  # Spring Boot Application Service
  tradingbot:
    build:
      context: .
    container_name: tradingbot_app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tradingdb
      SPRING_DATASOURCE_USERNAME: tradingAdmin
      SPRING_DATASOURCE_PASSWORD: tradingPass
      LOGGING_FILE_NAME: /logs/tradingbot.log
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
      - fluentd
    networks:
      - trading_network
    volumes:
      - ./logs:/logs
    restart: always

  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
    networks:
      - trading_network
    restart: always

  # Kibana Service
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - trading_network
    depends_on:
      - elasticsearch
    restart: always

# Volumes
volumes:
  postgres_data:
  logs:

# Networks
networks:
  trading_network:
    driver: bridge